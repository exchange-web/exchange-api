### Полное техническое задание на разработку системы учета операций

#### Общее описание системы
Система предназначена для учета операций с валютами, управления клиентами и генерации отчетов. Она включает несколько взаимосвязанных модулей, каждый из которых выполняет свою роль. В основе системы лежит авторизация и разграничение прав доступа для трех типов пользователей: администраторов, операторов и гостей.

---

### Модули системы

#### 1. Модуль "Авторизация и доступ"
- Назначение: Обеспечивает аутентификацию и авторизацию пользователей.
- Основные функции:
  - Регистрация пользователей (администратор).
  - Авторизация через JWT.
  - Разграничение доступа по ролям:
    - Администратор: полный доступ ко всем модулям.
    - Оператор: может создавать и изменять записи, но не удалять их.
    - Гость: только просмотр данных.
  - Проверка токенов для доступа к защищенным маршрутам.

---

#### 2. Модуль "Клиенты"
- Назначение: Хранение и управление данными о клиентах.
- Основные функции:
  - Создание, редактирование и удаление записей о клиентах (администратор).
  - Вывод списка клиентов (все роли).
  - Связывание клиентов с операциями (используется в модулях ввода данных).
- Связь с другими модулями:
  - Используется в модулях "Ввод данных EUR/USDT" и "Ввод данных USD/USDT" для выбора клиента.

---

#### 3. Модуль "Валюты"
- Назначение: Справочник валют, используемых в операциях.
- Основные функции:
  - Создание, редактирование и удаление валют (администратор).
  - Хранение данных о валюте: название, уникальный идентификатор, описание.
  - Предоставление списка валют другим модулям.
- Связь с другими модулями:
  - Используется в модулях "Ввод данных" и "Отчеты" для фильтрации и отображения данных по валютам.

---

#### 4. Модули ввода данных (EUR/USDT и USD/USDT)
- Назначение: Управление приходными и расходными операциями с валютными парами EUR/USDT и USD/USDT.
- Основные функции:
  - Ввод данных о приходах и расходах.
  - Автоматический расчет кросс-курса.
  - Валидация данных (дата, суммы, клиент).
  - Хранение операций в базе данных.
- Связь с другими модулями:
  - Использует список клиентов из модуля "Клиенты" для привязки операций.
  - Использует справочник валют из модуля "Валюты".
  - Данные передаются в модуль "Отчеты" для генерации отчетов.

---

#### 5. Модуль "Отчеты"
- Назначение: Генерация различных отчетов на основе данных операций.
- Типы отчетов:
  1. Сводный отчет:
     - Формируется по приходам и расходам за указанный период.
     - Включает данные о суммах, курсе и клиентах.
     - Подсчет общей суммы и среднего курса.
  2. Отчет по клиентам:
     - Выводит все операции конкретного клиента.
     - Фильтрация по времени.
  3. Отчет по типу операций:
     - Фильтрация данных по типу операции (приход или расход), валюте и периоду.
     - Подсчет общей суммы и среднего курса.
- Связь с другими модулями:
  - Получает данные из модулей ввода данных (EUR/USDT и USD/USDT).
  - Использует данные клиентов из модуля "Клиенты".
  - Использует справочник валют из модуля "Валюты".

---

### Связи между модулями

1. Модуль "Авторизация и доступ":
   - Ограничивает доступ к маршрутам всех модулей в зависимости от роли пользователя.

2. Модуль "Клиенты":
   - Используется в модулях "Ввод данных" для выбора клиента при создании операции.
   - Используется в модуле "Отчеты" для генерации отчетов по клиентам.

3. Модуль "Валюты":
   - Используется в модулях "Ввод данных" для выбора валюты.
   - Используется в модуле "Отчеты" для фильтрации и отображения данных.

4. Модули "Ввод данных EUR/USDT" и "USD/USDT":
   - Передают данные о приходах и расходах в модуль "Отчеты".
   - Используют модули "Клиенты" и "Валюты" для валидации и привязки данных.

5. Модуль "Отчеты":
   - Получает данные из модулей ввода данных.
   - Использует данные клиентов и валют для фильтрации и отображения отчетов.

---
### Технические требования
1. База данных:
   - Используется SQLAlchemy для ORM.
   - Таблицы:
     - users: пользователи и их роли.
     - clients: информация о клиентах.
     - currencies: справочник валют.
     - operations_eur_usdt: операции EUR/USDT.
     - operations_usd_usdt: операции USD/USDT.

2. Backend:
   - FastAPI для реализации API.
   - JWT для авторизации.

3. Валидация данных:
   - Используется Pydantic для проверки данных (схемы валидации для ввода данных, фильтров и запросов).

4. Frontend:
   - Опционально: форма ввода данных и отображение отчетов.

5. Тестирование:
   - Покрытие всех ключевых функций (авторизация, валидация данных, генерация отчетов) с помощью Pytest.

---

### Потенциальные доработки
1. Расширение отчетов: добавление новых типов аналитики.
2. Реализация уведомлений: отправка уведомлений клиентам или администраторам.
3. Интеграция с внешними системами: для автоматического получения данных о курсах валют.